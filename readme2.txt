-------------------------------------poller-------------------------------------

-----Example Usage-----

make
cd bin
./poller 5634 8 16 pollLog.txt pollStats.txt

Από άλλο terminal:
telnet localhost 5634

-----Code Explanation-----

handle_sigint(int sig): Αυτή η συνάρτηση είναι ο χειριστής σήματος για το SIGINT (Ctrl+C). 
Όταν καλείται, ανοίγει το αρχείο στατιστικών στοιχείων της ψηφοφορίας και γράφει στο αρχείο 
τον τρέχοντα αριθμό ψήφων για κάθε κόμμα, ακολουθούμενο από τον συνολικό αριθμό ψήφων. 

trim(const string& str): Αυτή η συνάρτηση χρησιμοποιείται για την αφαίρεση αρχικών και τελικών κενών 
και χαρακτήρων νέας γραμμής από ένα string που προέρχεται από τη read(). Αυτό χρησιμοποιείται για τον 
καθαρισμό της εισόδου που λαμβάνεται από τον πελάτη.

workerThread(string poll_log_file): Αυτή η συνάρτηση αναπαριστά τη συμπεριφορά των νημάτων εργάτη. 
Κάθε νήμα εργάτης περιμένει επανειλημμένα μέχρι να υπάρχει μια σύνδεση στο connectionBuffer και στη 
συνέχεια επεξεργάζεται τη σύνδεση. Για κάθε σύνδεση, ζητάει το όνομα του πελάτη και την ψήφο του κόμματος, 
ελέγχει αν ο πελάτης έχει ήδη ψηφίσει (στην περίπτωση αυτή στέλνει μια απάντηση "Already Voted"), 
και αν όχι, καταγράφει την ψήφο και στέλνει μια απάντηση επιβεβαίωσης. Γράφει επίσης το όνομα του πελάτη 
και την ψήφο του κόμματος στο αρχείο καταγραφής της ψηφοφορίας.

main(int argc, char *argv[]): Αυτό είναι το σημείο εισόδου του προγράμματος. Αρχικά ελέγχει αν έχει δοθεί 
ο σωστός αριθμός ορίων της γραμμής εντολών. Στη συνέχεια, ρυθμίζει το χειρισμό σημάτων για SIGINT, 
εκτυπώνει τις πληροφορίες του server, δημιουργεί έναν αριθμό νημάτων εργασίας ίσο με τον αριθμό που 
καθορίζεται στα ορίσματα γραμμής εντολών, ρυθμίζει την υποδοχή του server και εισέρχεται σε έναν 
άπειρο βρόχο όπου περιμένει για εισερχόμενες συνδέσεις. Όταν μια νέα σύνδεση γίνεται αποδεκτή, 
προστίθεται στο connectionBuffer ώστε ένα νήμα εργασίας να μπορεί να την επεξεργαστεί.

Συνοπτικά, αυτός ο κώδικας υλοποιεί έναν πολυνηματικό server που δέχεται δεδομένα ψηφοφορίας από τους 
πελάτες, καταγράφει τις ψήφους και γράφει ένα αρχείο καταγραφής των δεδομένων της ψηφοφορίας. 
Όταν διακόπτεται από ένα σήμα SIGINT (Ctrl+C), γράφει τα τρέχοντα αποτελέσματα της ψηφοφορίας σε ένα αρχείο
και τερματίζει.


-------------------------------------pollSwayer-------------------------------------

-----Example Usage-----

make
cd bin
./poller 5634 8 16 pollLog.txt pollStats.txt

Από άλλο terminal:
make
cd bin
./pollSwayer 127.0.0.1 5634 votes.txt

-----Code Explanation-----

sendVote(const string &serverName, int portNum, const string &name_vote): Αυτή η συνάρτηση στέλνει μια ψήφο
στον διακομιστή. Δημιουργεί πρώτα μια υποδοχή TCP και καθορίζει τη διεύθυνση του server. Στη συνέχεια 
συνδέεται με τον server και στέλνει την ψήφο του πελάτη (που περιέχεται στο string name_vote) στον server. 
Μετά την αποστολή της ψήφου, περιμένει επιβεβαίωση από τον διακομιστή, εκτυπώνει την επιβεβαίωση και κλείνει 
την υποδοχή.

main(int argc, char *argv[]): Αυτό είναι το σημείο εισόδου του προγράμματος. Αρχικά ελέγχει ότι έχει δοθεί ο 
σωστός αριθμός ορίων της γραμμής εντολών. Αν ναι, ανοίγει το αρχείο εισόδου που καθορίζεται στα ορίσματα 
γραμμής εντολών και για κάθε γραμμή του αρχείου (που αντιπροσωπεύει μια ψήφο), δημιουργεί ένα νέο νήμα για 
να στείλει την ψήφο στον διακομιστή. Περιμένει να τελειώσει κάθε νήμα πριν προχωρήσει στην επόμενη γραμμή. 
Αυτό εξασφαλίζει ότι οι ψήφοι αποστέλλονται με τη σειρά που εμφανίζονται στο αρχείο.

Συνοπτικά, αυτό το πρόγραμμα διαβάζει δεδομένα ψηφοφορίας από ένα αρχείο και στέλνει κάθε ψήφο σε έναν 
διακομιστή. Οι ψήφοι αποστέλλονται ταυτόχρονα, με κάθε ψήφο να αποστέλλεται από ξεχωριστό νήμα. 
Αυτό επιτρέπει την αποτελεσματική χρήση των πόρων του δικτύου, καθώς το πρόγραμμα μπορεί να στείλει την 
επόμενη ψήφο περιμένοντας την επιβεβαίωση της προηγούμενης ψήφου από τον διακομιστή.


-------------------------------------create_input-------------------------------------

-----Example Usage-----

make
cd scripts
./create_input.sh politicalParties.txt 5

-----Code Explanation-----

Αυτό το script bash παράγει ένα αρχείο εισόδου για ένα σύστημα δημοσκοπήσεων. Κάθε γραμμή του αρχείου 
αντιπροσωπεύει μια ψήφο, αποτελούμενη από ένα τυχαία παραγόμενο όνομα και ένα κόμμα που επιλέγεται από 
μια παρεχόμενη λίστα κομμάτων. Ακολουθεί μια λεπτομερής ανάλυση κάθε μέρους του σεναρίου:

Το σενάριο ξεκινά με τον έλεγχο του αριθμού των ορίων της γραμμής εντολών. Εάν ο αριθμός δεν είναι 2, 
εκτυπώνει ένα μήνυμα χρήσης και εξέρχεται με status code 1.

Το σενάριο αναθέτει τα ορίσματα στις μεταβλητές parties_file και num_lines. Το parties_file είναι το 
αρχείο που περιέχει τον κατάλογο των κομμάτων και το num_lines είναι ο αριθμός των ψήφων που θα παραχθούν.

Το σενάριο ελέγχει αν το αρχείο parties_file υπάρχει. Εάν δεν υπάρχει, εκτυπώνει ένα μήνυμα και εξέρχεται 
με status code 1.

Το σενάριο εισέρχεται σε έναν βρόχο for-loop που επαναλαμβάνει num_lines φορές. Σε κάθε επανάληψη του 
βρόχου:

Δημιουργεί ένα τυχαίο όνομα μήκους 3 έως 12 χαρακτήρων διαβάζοντας από το /dev/urandom (μια πηγή 
κρυπτογραφικά ασφαλών τυχαίων bytes σε συστήματα τύπου Unix), επιλέγοντας μόνο αλφαβητικούς χαρακτήρες 
με την εντολή tr -dc A-Za-z και περιορίζοντας την έξοδο σε έναν τυχαίο αριθμό χαρακτήρων μεταξύ 3 και 12 
με την εντολή head -c.

Επιλέγει μια τυχαία γραμμή (party) από το αρχείο parties_file χρησιμοποιώντας την εντολή shuf -n 1.

Επισυνάπτει το όνομα που παράγεται και το επιλεγμένο κόμμα, χωρισμένα με κενό, στο αρχείο inputFile.txt 
στον κατάλογο δεδομένων.

Συνοπτικά, αυτό το script παράγει έναν καθορισμένο αριθμό ψήφων με τυχαία ονόματα και κόμματα που 
επιλέγονται από μια δεδομένη λίστα και τα γράφει στο αρχείο inputFile.txt. Αυτό θα μπορούσε να είναι 
χρήσιμο για τη δοκιμή ενός συστήματος ψηφοφορίας.


-------------------------------------processLogFile-------------------------------------

-----Example Usage-----
make
cd scripts
./processLogFile.sh pollLog.txt

-----Code Explanation-----

Αυτό το script bash επεξεργάζεται ένα αρχείο καταγραφής ψηφοφορίας και δημιουργεί ένα αρχείο αποτελεσμάτων 
που περιέχει μια καταμέτρηση των ψήφων. Κάθε γραμμή στο αρχείο καταγραφής θεωρείται ότι αντιπροσωπεύει μια 
ψήφο, με ένα όνομα και ένα κόμμα χωρισμένα με κενό. Ακολουθεί μια λεπτομερής ανάλυση κάθε μέρους του 
σεναρίου:

Το σενάριο ξεκινάει ελέγχοντας αν έχει δοθεί ο σωστός αριθμός ορίων της γραμμής εντολών. Εάν όχι, εμφανίζει 
ένα μήνυμα χρήσης και εξέρχεται με status code 1.

Δίνει το όρισμα στη μεταβλητή poll_log, η οποία αντιπροσωπεύει το όνομα του αρχείου καταγραφής. Το σενάριο 
ορίζει επίσης το όνομα του αρχείου αποτελεσμάτων σε poller_results_file.

Στη συνέχεια, το σενάριο ελέγχει αν το αρχείο καταγραφής δημοσκοπήσεων υπάρχει και είναι αναγνώσιμο. Εάν 
κάποια από αυτές τις συνθήκες δεν πληρούται, εκτυπώνει ένα μήνυμα σφάλματος και εξέρχεται με κωδικό κατάστασης 1.

Τέλος, το σενάριο χρησιμοποιεί την εντολή awk για να διαβάσει το αρχείο καταγραφής της ψηφοφορίας, να 
υπολογίσει τις ψήφους και να γράψει τα αποτελέσματα στο αρχείο poller_results_file. Ακολουθεί μια ανάλυση 
της εντολής awk:

BEGIN {OFS=FS=" "; total = 0}: Αυτό το μπλοκ εκτελείται πριν από την επεξεργασία των γραμμών του αρχείου. 
Τα OFS (διαχωριστικό πεδίου εξόδου) και FS (διαχωριστικό πεδίου) τίθενται σε ένα κενό και το σύνολο 
αρχικοποιείται σε 0.

!seen[$1]++ {votes[$2]++; total++}: Για κάθε γραμμή στο αρχείο, εάν το πρώτο πεδίο (όνομα) δεν έχει 
ξαναγίνει αντιληπτό, αυξάνει τον αριθμό των ψήφων για το κόμμα (το δεύτερο πεδίο) και τον συνολικό αριθμό 
των ψήφων. Αυτό ουσιαστικά μετράει κάθε μοναδικό όνομα ως μία ψήφο.

END {for (i in votes) print i, votes[i]; print "TOTAL", total}: Αφού επεξεργαστεί όλες τις γραμμές, 
εκτυπώνει την καταμέτρηση των ψήφων για κάθε κόμμα και στη συνέχεια εκτυπώνει τη συνολική καταμέτρηση 
των ψήφων.

Το αρχείο αποτελεσμάτων περιέχει κάθε κόμμα και τον αριθμό των ψήφων του, ακολουθούμενο από τον συνολικό 
αριθμό των ψήφων. Είναι σημαντικό να σημειωθεί ότι αυτό το σενάριο μετράει μόνο τα μοναδικά ονόματα ως 
ψήφους- αν το ίδιο όνομα εμφανίζεται πολλές φορές, μετράει μόνο ως μία ψήφος.


-------------------------------------tallyVotes-------------------------------------

-----Example Usage-----
make
cd scripts
./tallyVotes.sh tallyResultsFile.txt

-----Code Explanation-----

Αυτό το script bash έχει σχεδιαστεί για να επεξεργάζεται ένα αρχείο εισόδου ψηφοφορίας και να δημιουργεί 
ένα αποτέλεσμα καταμέτρησης των ψήφων. Κάθε γραμμή στο αρχείο εισόδου θεωρείται ότι αντιπροσωπεύει μια ψήφο, 
με ένα όνομα και ένα κόμμα χωρισμένα με κενό. Ας δούμε το σενάριο:

Το σενάριο αρχίζει ελέγχοντας αν το αρχείο inputFile.txt υπάρχει στον κατάλογο ../data/. Εάν το αρχείο δεν 
υπάρχει, η δέσμη ενεργειών εκτυπώνει ένα μήνυμα σφάλματος και εξέρχεται με κωδικό κατάστασης 1.

Στη συνέχεια, η δέσμη ενεργειών ελέγχει αν παρέχεται ένα όρισμα γραμμής εντολών. Αυτό το όρισμα θα πρέπει 
να είναι το όνομα του αρχείου στο οποίο θα αποθηκευτούν τα αποτελέσματα της καταμέτρησης. Εάν δεν παρέχεται 
κανένα όρισμα, το σενάριο εκτυπώνει ένα μήνυμα που ζητάει το όνομα του αρχείου και στη συνέχεια εξέρχεται 
με κωδικό κατάστασης 1.

Στη συνέχεια, το σενάριο επεξεργάζεται το αρχείο inputFile.txt χρησιμοποιώντας τις εντολές awk, sort και 
uniq. Ακολουθεί μια ανάλυση αυτής της διαδικασίας:

awk '!seen[$1]++ {print $2}' "../data/inputFile.txt": Αυτή η εντολή awk επεξεργάζεται κάθε γραμμή του 
αρχείου εισόδου. Για κάθε γραμμή, αν το όνομα (που αντιπροσωπεύεται από το $1) δεν έχει ξαναγίνει αντιληπτό, 
εκτυπώνει το κόμμα (που αντιπροσωπεύεται από το $2). Με άλλα λόγια, εκτυπώνει το κόμμα για την πρώτη ψήφο 
κάθε μοναδικού ψηφοφόρου.

| sort: Αυτό διοχετεύει την έξοδο της εντολής awk στην εντολή sort, η οποία ταξινομεί τα κόμματα σε αύξουσα 
σειρά.

| uniq -c: Αυτό διοχετεύει την ταξινομημένη λίστα των κομμάτων στην εντολή uniq -c. Η εντολή uniq αφαιρεί 
τις διπλές διαδοχικές γραμμές από την ταξινομημένη λίστα και η επιλογή -c προθέτει σε κάθε γραμμή τον 
αριθμό των εμφανίσεων.

Η έξοδος, η οποία είναι η καταμέτρηση των πρώτων ψήφων για κάθε μοναδικό ψηφοφόρο, ανακατευθύνεται σε ένα 
αρχείο στον κατάλογο ../results/. Το όνομα του αρχείου είναι το όρισμα που παρέχεται στο σενάριο.

Να σημειωθεί ότι αυτό το σενάριο μετρά μόνο την πρώτη ψήφο από κάθε μοναδικό ψηφοφόρο, όπως ορίζεται στην 
εντολή awk. Εάν ένας ψηφοφόρος έχει ψηφίσει πολλές φορές στο αρχείο inputFile.txt, θα υπολογιστεί μόνο η 
πρώτη του ψήφος.