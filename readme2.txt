-------------------------------------poller-------------------------------------

handle_sigint(int sig): Αυτή η συνάρτηση είναι ο χειριστής σήματος για το SIGINT (Ctrl+C). 
Όταν καλείται, ανοίγει το αρχείο στατιστικών στοιχείων της ψηφοφορίας και γράφει στο αρχείο 
τον τρέχοντα αριθμό ψήφων για κάθε κόμμα, ακολουθούμενο από τον συνολικό αριθμό ψήφων. 

trim(const string& str): Αυτή η συνάρτηση χρησιμοποιείται για την αφαίρεση αρχικών και τελικών κενών 
και χαρακτήρων νέας γραμμής από ένα string που προέρχεται από τη read(). Αυτό χρησιμοποιείται για τον 
καθαρισμό της εισόδου που λαμβάνεται από τον πελάτη.

workerThread(string poll_log_file): Αυτή η συνάρτηση αναπαριστά τη συμπεριφορά των νημάτων εργάτη. 
Κάθε νήμα εργάτης περιμένει επανειλημμένα μέχρι να υπάρχει μια σύνδεση στο connectionBuffer και στη 
συνέχεια επεξεργάζεται τη σύνδεση. Για κάθε σύνδεση, ζητάει το όνομα του πελάτη και την ψήφο του κόμματος, 
ελέγχει αν ο πελάτης έχει ήδη ψηφίσει (στην περίπτωση αυτή στέλνει μια απάντηση "Already Voted"), 
και αν όχι, καταγράφει την ψήφο και στέλνει μια απάντηση επιβεβαίωσης. Γράφει επίσης το όνομα του πελάτη 
και την ψήφο του κόμματος στο αρχείο καταγραφής της ψηφοφορίας.

main(int argc, char *argv[]): Αυτό είναι το σημείο εισόδου του προγράμματος. Αρχικά ελέγχει αν έχει δοθεί 
ο σωστός αριθμός ορίων της γραμμής εντολών. Στη συνέχεια, ρυθμίζει το χειρισμό σημάτων για SIGINT, 
εκτυπώνει τις πληροφορίες του server, δημιουργεί έναν αριθμό νημάτων εργασίας ίσο με τον αριθμό που 
καθορίζεται στα ορίσματα γραμμής εντολών, ρυθμίζει την υποδοχή του διακομιστή και εισέρχεται σε έναν 
άπειρο βρόχο όπου περιμένει για εισερχόμενες συνδέσεις. Όταν μια νέα σύνδεση γίνεται αποδεκτή, 
προστίθεται στο connectionBuffer ώστε ένα νήμα εργασίας να μπορεί να την επεξεργαστεί.

Συνοπτικά, αυτός ο κώδικας υλοποιεί έναν πολυνηματικό διακομιστή που δέχεται δεδομένα ψηφοφορίας από τους 
πελάτες, καταγράφει τις ψήφους και γράφει ένα αρχείο καταγραφής των δεδομένων της ψηφοφορίας. 
Όταν διακόπτεται από ένα σήμα SIGINT (Ctrl+C), γράφει τα τρέχοντα αποτελέσματα της ψηφοφορίας σε ένα αρχείο
και τερματίζει.


-------------------------------------pollSwayer-------------------------------------

sendVote(const string &serverName, int portNum, const string &name_vote): Αυτή η συνάρτηση στέλνει μια ψήφο
στον διακομιστή. Δημιουργεί πρώτα μια υποδοχή TCP και καθορίζει τη διεύθυνση του server. Στη συνέχεια 
συνδέεται με τον server και στέλνει την ψήφο του πελάτη (που περιέχεται στο string name_vote) στον server. 
Μετά την αποστολή της ψήφου, περιμένει επιβεβαίωση από τον διακομιστή, εκτυπώνει την επιβεβαίωση και κλείνει 
την υποδοχή.

main(int argc, char *argv[]): Αυτό είναι το σημείο εισόδου του προγράμματος. Αρχικά ελέγχει ότι έχει δοθεί ο 
σωστός αριθμός ορίων της γραμμής εντολών. Αν ναι, ανοίγει το αρχείο εισόδου που καθορίζεται στα ορίσματα 
γραμμής εντολών και για κάθε γραμμή του αρχείου (που αντιπροσωπεύει μια ψήφο), δημιουργεί ένα νέο νήμα για 
να στείλει την ψήφο στον διακομιστή. Περιμένει να τελειώσει κάθε νήμα πριν προχωρήσει στην επόμενη γραμμή. 
Αυτό εξασφαλίζει ότι οι ψήφοι αποστέλλονται με τη σειρά που εμφανίζονται στο αρχείο.

Συνοπτικά, αυτό το πρόγραμμα διαβάζει δεδομένα ψηφοφορίας από ένα αρχείο και στέλνει κάθε ψήφο σε έναν 
διακομιστή. Οι ψήφοι αποστέλλονται ταυτόχρονα, με κάθε ψήφο να αποστέλλεται από ξεχωριστό νήμα. 
Αυτό επιτρέπει την αποτελεσματική χρήση των πόρων του δικτύου, καθώς το πρόγραμμα μπορεί να στείλει την 
επόμενη ψήφο περιμένοντας την επιβεβαίωση της προηγούμενης ψήφου από τον διακομιστή.